<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.watflix.model.mapper.QnAMapper">
<!--  QnA 작성  -->
<insert id="mQnAWrite" parameterType="qnaVO">
	<selectKey keyProperty="qnaNo" resultType="int" order="BEFORE"> 
		select qna_seq.nextval from dual
	</selectKey>
	insert into qna(QNA_NO,ID,QNA_TITLE,QNA_CONTENTS,QNA_TYPE_NO)
	values(#{qnaNo},#{memberVO.id},#{qnaTitle},#{qnaContents},#{qnaTypeVO.qnaTypeNo})
</insert>

<!-- QNA 상세보기-->
<select id="mQnADetail" resultMap="qnaRM">
	select q.QNA_NO, q.QNA_TITLE,to_char(q.QNA_POSTED_TIME,'YYYY.MM.DD HH24:MI:SS')
	as QNA_POSTED_TIME,q.ID,q.QNA_CONTENTS,t.QNA_TYPE,t.QNA_TYPE_NO
	from qna q,member m,qna_Type t
	where q.ID=m.id and q.QNA_NO=#{qnaNo} and q.QNA_TYPE_NO=t.QNA_TYPE_NO
</select>
<!-- QNA 삭제 -->
<delete id="mQnADelete" parameterType="faqVO">
	delete from qna where QNA_NO=#{qnaNo}
</delete>
<!-- QNA 갯수 가져오기 -->
<select id="mGetTotalQnACount" resultType="int">
	select COUNT(*) from QNA
</select>
<!-- QNA 리스트 가져오기 -->
<select id="mGetQnAList" resultMap="qnaRM" parameterType="pagingBean">
	select QNA_NO,ID,QNA_TITLE,QNA_CONTENTS,QNA_POSTED_TIME
	from (select ROW_NUMBER() OVER(ORDER BY QNA_NO DESC) AS RNUM, ID, QNA_NO,QNA_TITLE,QNA_CONTENTS,QNA_POSTED_TIME FROM QNA)
	WHERE rnum BETWEEN #{startRowNumber} AND #{endRowNumber}
</select>
 	<!-- QnAVO에 MemberVO의 id(has a 관계)를 넣을 수 있도록 ResaultMap을 셋팅한다. -->
	<resultMap type="qnaVO" id="qnaRM">
		<result property="memberVO.id" column="id" />
		<result property="qnaTypeVO.qType" column="QNA_TYPE" />
		<result property="qnaTypeVO.qnaTypeNo" column="QNA_TYPE_NO" />
	</resultMap> 
	<!-- QnAAnswer 작성 -->
	<insert id="mQnAAnswerWrite" parameterType="qnaAnswerVO">
	<selectKey keyProperty="qnaAnswerNo" resultType="int" order="BEFORE"> 
		select qna_answer_seq.nextval from dual
	</selectKey>
	insert into QNA_ANSWER(QNA_ANSWER_NO,ID,QNA_ANSWER_CONTENTS,QNA_NO)
	values(#{qnaAnswerNo},#{memberVO.id},#{qnaAnswerContents},#{qnaVO.qnaNo})
	</insert>
	
	<!-- QnAAnswer용 resultMap -->
	<resultMap type="qnAAnswerVO" id="qnAAnswerRM">
		<result property="memberVO.id" column="id"/>
		<result property="qnaVO.qnaNo" column="qna_no"/>
	</resultMap>
	
	<!-- 각 QnA 별 QnAAnswer 수 조회  -->
	<select id="mQnAAnswerCountByQnANo" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM qna_answer WHERE qna_no=#{qnaNo}
	</select>
	<!-- 각 QnA 별 QnAAnswer 조회 -->
	<select id="mQnAAnswerByQnANo" resultMap="qnAAnswerRM">
		SELECT qna_answer_no, qna_answer_contents, qna_answer_posted_time, qna_no, id
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY qna_answer_no DESC) AS rnum, qna_answer_no, qna_answer_contents, qna_answer_posted_time, qna_no, id FROM qna_answer WHERE qna_no=#{qnaNo})
		WHERE rnum BETWEEN #{pagingBean.startRowNumber} AND #{pagingBean.endRowNumber}
	</select>
 </mapper>
 
 
 
 
 
 
 
 
 
 