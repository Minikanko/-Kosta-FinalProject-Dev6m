<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.watflix.model.mapper.ContentsMapper">
 	<resultMap type="contentsVO" id="contentsRM">
		<result property="genreVO.genreCode" column="GENRE_CODE"/>
		<result property="genreVO.genreName" column="GENRE_NAME"/>
	</resultMap>
	
 	<sql id="selectGenre">
 		select GENRE_CODE,GENRE_NAME from genre
 	</sql>
 
 	<select id="mFindGenreByCode" resultType="genreVO">
 		<include refid="selectGenre"></include>
 		where GENRE_CODE=#{value}
 	</select>
 	
 	<!-- 모든 컨텐츠 개수 출력 -->
 	<select id="mGetTotalContentsCount" resultType="int">
 		select count(*) from contents
 	</select>
 	
 	<!-- 특정 카테고리의 컨텐츠 개수 출력 -->
 	<select id="mGetTotalContentsCountForType" resultType="int">
 		select count(*) from contents where CONTENTS_TYPE=#{value}
 	</select>
 	
 	<!-- 모든 컨텐츠 리스트 출력 -->
 	<select id="mGetAllContentsList" resultMap="contentsRM" parameterType="pagingBean">
 		select C.CONTENTS_NO,C.CONTENTS_TITLE,C.CONTENTS_TYPE,G.GENRE_CODE,G.GENRE_NAME,C.CONTENTS_SUMMARY,C.CONTENTS_SMALL_THUMBNAIL,C.CONTENTS_BIG_THUMBNAIL,C.CONTENTS_AVG_STARS,C.CONTENTS_LIKES,C.CONTENTS_HITS
		from (select row_number() over(order by CONTENTS_NO DESC) as rnum,CONTENTS_NO,CONTENTS_TITLE,CONTENTS_TYPE,GENRE_CODE,CONTENTS_SUMMARY,CONTENTS_SMALL_THUMBNAIL,CONTENTS_BIG_THUMBNAIL,
		CONTENTS_AVG_STARS,CONTENTS_LIKES,CONTENTS_HITS from contents) C, 
		GENRE G
		where C.GENRE_CODE=G.GENRE_CODE and rnum BETWEEN #{startRowNumber} AND #{endRowNumber}
 	</select>
 	
 	<!-- 특정 카테고리의 컨텐츠 리스트 출력 -->
 	<select id="mGetAllContentsListForType" resultMap="contentsRM" parameterType="map">
 		select C.CONTENTS_NO,C.CONTENTS_TITLE,C.CONTENTS_TYPE,G.GENRE_CODE,G.GENRE_NAME,C.CONTENTS_SUMMARY,C.CONTENTS_SMALL_THUMBNAIL,C.CONTENTS_BIG_THUMBNAIL,C.CONTENTS_AVG_STARS,C.CONTENTS_LIKES,C.CONTENTS_HITS
		from (select row_number() over(order by CONTENTS_NO DESC) as rnum,CONTENTS_NO,CONTENTS_TITLE,CONTENTS_TYPE,GENRE_CODE,CONTENTS_SUMMARY,CONTENTS_SMALL_THUMBNAIL,CONTENTS_BIG_THUMBNAIL,
		CONTENTS_AVG_STARS,CONTENTS_LIKES,CONTENTS_HITS from contents where CONTENTS_TYPE=#{contentsType}) C, 
		GENRE G
		where C.GENRE_CODE=G.GENRE_CODE and rnum BETWEEN #{pagingBean.startRowNumber} AND #{pagingBean.endRowNumber}
 	</select>
 	
 	
 	<!-- 컨텐츠 검색 -->
	<select id="mFindContentsByNo" resultMap="contentsRM">
 		select C.CONTENTS_NO,C.CONTENTS_TITLE,C.CONTENTS_TYPE,G.GENRE_CODE,G.GENRE_NAME,C.CONTENTS_SUMMARY,C.CONTENTS_SMALL_THUMBNAIL,C.CONTENTS_BIG_THUMBNAIL,C.CONTENTS_AVG_STARS,C.CONTENTS_LIKES,C.CONTENTS_HITS
		from (select CONTENTS_NO,CONTENTS_TITLE,CONTENTS_TYPE,GENRE_CODE,CONTENTS_SUMMARY,CONTENTS_SMALL_THUMBNAIL,CONTENTS_BIG_THUMBNAIL,CONTENTS_AVG_STARS,CONTENTS_LIKES,CONTENTS_HITS from contents) C, GENRE G
		where C.GENRE_CODE=G.GENRE_CODE and CONTENTS_NO=#{value}
 	</select>
 	
 	<!-- 장르 insert -->
 	<insert id="mGenreRegister" parameterType="genreVO">
 		insert into genre(GENRE_CODE,GENRE_NAME) values(#{genreCode},#{genreName})
 	</insert>
 	
 	<!-- 컨텐츠 insert -->
 	<insert id="mContentsRegister" parameterType="contentsVO">
 		insert into CONTENTS(CONTENTS_NO,CONTENTS_TITLE,CONTENTS_TYPE,GENRE_CODE,CONTENTS_SUMMARY,CONTENTS_SMALL_THUMBNAIL,CONTENTS_BIG_THUMBNAIL) 
 		values(#{contentsNo},#{contentsTitle},#{contentsType},#{genreVO.genreCode},#{contentsSummary},#{contentsSmallThumbnail},#{contentsBigThumbnail})
 	</insert>
 	
 	<!-- comment 많은 순으로 content 불러오기 전체 장르(resultType 고민) -->
 	<select id="mContentsGetListByCommentCount">
 		SELECT b.contents_no, b.contents_title, b.contents_type, b.genre_code, b.contents_small_thumbnail, b.contents_big_thumbnail, b.contents_avg_stars, b.contents_likes, b.contents_hits, count(a.comments_no) as comments_count
		FROM comments a, contents b
		WHERE a.contents_no(+)=b.contents_no
		GROUP BY b.contents_no, b.contents_title, b.contents_type, b.genre_code, b.contents_small_thumbnail, b.contents_big_thumbnail, b.contents_avg_stars, b.contents_likes, b.contents_hits
		ORDER BY comments_count DESC;
 	</select>
</mapper>










