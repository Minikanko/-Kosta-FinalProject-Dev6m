<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.watflix.model.mapper.PointHistoryMapper">
	<resultMap type="pointHistoryVO" id="pointHistoryRM">
		<!-- 리뷰정보담기 -->
		<result property="reviewVO.reviewTitle" column="review_title"/>
		<result property="reviewVO.reviewNo" column="review_no"/>
		<result property="reviewVO.contentsVO.contentsTitle" column="contents_title"/>
		<!-- 평점정보담기  -->
		<result property="commentsVO.commentsNo" column="comments_no"/>
		<result property="commentsVO.commentsStars" column="comments_stars"/>
		<result property="commentsVO.contentsVO.contentsTitle" column="contents_title"/>
		<!-- 컨텐츠 정보담기  -->
		<result property="contentsVO.contentsNo" column="contents_no"/>
		<result property="contentsVO.contentsTitle" column="contents_title"/>
		<!-- 주문내역 -->
		<result property="productOrderVO.orderNo" column="order_no"/>		
	</resultMap>

	<!-- 사용자에 따른 포인트사용내역 -->
	<select id="mProductHistoryGetTotalCount" resultType="int">
		SELECT COUNT(*) FROM POINT_HISTORY WHERE ID=#{value}
	</select>
	
	<!-- 사용자에 따른 포인트 사용내역 리스트 출력 -->
	<select id="mMemberPointHistoryCheck" resultMap="pointHistoryRM">
		SELECT P.POINT_HISTORY_NO,P.ID,P.REVIEW_NO,(select REVIEW_TITLE from REVIEW where P.REVIEW_no=REVIEW_no) AS REVIEW_TITLE,
      P.COMMENTS_NO,(select comments_stars from COMMENTS where P.COMMENTS_no=COMMENTS_no) as comments_stars,
       NVL2((select C.CONTENTS_NO from REVIEW R,CONTENTS C where P.REVIEW_no=R.REVIEW_NO and C.CONTENTS_NO=R.CONTENTS_NO),
      (select C.CONTENTS_NO from REVIEW R,CONTENTS C where P.REVIEW_no=R.REVIEW_NO and C.CONTENTS_NO=R.CONTENTS_NO), 
      (select C.CONTENTS_NO from COMMENTS M,CONTENTS C where P.COMMENTS_no=M.COMMENTS_NO and C.CONTENTS_NO=M.CONTENTS_NO)) AS CONTENTS_NO,
      NVL2((select C.CONTENTS_TITLE from REVIEW R,CONTENTS C where P.REVIEW_no=R.REVIEW_NO and C.CONTENTS_NO=R.CONTENTS_NO),
       (select C.CONTENTS_TITLE from REVIEW R,CONTENTS C where P.REVIEW_no=R.REVIEW_NO and C.CONTENTS_NO=R.CONTENTS_NO),
       (select C.CONTENTS_TITLE from COMMENTS M,CONTENTS C where P.COMMENTS_no=M.COMMENTS_NO and C.CONTENTS_NO=M.CONTENTS_NO)) AS CONTENTS_TITLE,
      P.POINT,P.POINT_HISTORY_CONTENTS,P.CURRENT_TIME,P.ORDER_NO
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY POINT_HISTORY_NO DESC) AS RNUM,
      POINT_HISTORY_NO,ID,REVIEW_NO,COMMENTS_NO,ORDER_NO,
      POINT,POINT_HISTORY_CONTENTS,CURRENT_TIME FROM POINT_HISTORY WHERE ID=#{id}) P where
		RNUM BETWEEN #{pagingBean.startRowNumber} AND #{pagingBean.endRowNumber}
	</select>
	
	<!-- 리뷰글쓰기로 인한 포인트추가내역(15 포인트) -->
 	<insert id="mPointHistoryAddWithReview">
 		<selectKey keyProperty="pointHistoryNo" resultType="int" order="BEFORE">
 			SELECT POINT_HISTORY_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO POINT_HISTORY(POINT_HISTORY_NO,ID,REVIEW_NO,CONTENTS_NO,POINT,POINT_HISTORY_CONTENTS)
 		VALUES(#{pointHistoryNo},#{id},#{reviewNo},#{contentsNo},15,'리뷰작성으로 포인트 적립')
 	</insert>
 	
 	<!-- 평점글쓰기로 인한 포인트추가내역(10 포인트) -->
 	<insert id="mPointHistoryAddWithComments">
 		<selectKey keyProperty="pointHistoryNo" resultType="int" order="BEFORE">
 			SELECT POINT_HISTORY_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO POINT_HISTORY(POINT_HISTORY_NO,ID,COMMENTS_NO,CONTENTS_NO,POINT,POINT_HISTORY_CONTENTS)
 		VALUES(#{pointHistoryNo},#{id},#{commentsNo},#{contentsNo},10,'평점작성으로 포인트 적립')
 	</insert>
 	
 	<!-- 주문으로 인한 포인트감소내역 -->
 	<insert id="mPointHistoryAddWithOrder">
 		<selectKey keyProperty="pointHistoryNo" resultType="int" order="BEFORE">
 			SELECT POINT_HISTORY_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO POINT_HISTORY(POINT_HISTORY_NO,ID,ORDER_NO ,POINT,POINT_HISTORY_CONTENTS)
 		VALUES(#{pointHistoryNo},#{productOrderVO.memberVO.id},#{productOrderVO.orderNo},-#{point},'포인트마켓사용')
 	</insert>
</mapper>

