<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.watflix.model.mapper.CommentsMapper">
 	<!-- Comments 게시물 전체 수 조회 -->
 	<sql id="selectTotalPostCount">
 		SELECT COUNT(*) FROM comments
 	</sql>
 	<!-- Comments 게시물 전체 수 조회 -->
 	<select id="mCommentsGetTotalPostCount" resultType="int">
 		<include refid="selectTotalPostCount"/>
 	</select>
 	<!-- Comments 게시물 컨텐츠 별 수 조회 -->
 	<select id="mCommentsGetTotalPostCountByContentNo" parameterType="String" resultType="int">
 		<include refid="selectTotalPostCount"/>
 		WHERE contents_no = #{value}
 	</select> 
 	<!-- CommentsVO와 has a 관계인 MemberVO와 ContentsVO를 담을수 있도록 resultMap 선언  -->
 	<resultMap type="commentsVO" id="commentsBoardRM">
 		<result property="memberVO.id" column="id"/>
 		<result property="contentsVO.contentsNo" column="contents_no"/>
 	</resultMap>
 	<!-- 전체 Comments 게시물 리스트 조회  -->
 	<select id="mCommentsGetAllList" resultMap="commentsBoardRM">
 		SELECT comments_no, id, contents_no, comments, comments_stars, comments_posted_time FROM(
		SELECT row_number() over(order by comments_no desc) as rnum, comments_no, id, contents_no, comments, comments_stars, comments_posted_time
		FROM comments) WHERE rnum BETWEEN #{startRowNumber} AND #{endRowNumber}
 	</select>
 	<!-- 내가 작성한 Comments 게시물 리스트 조회 -->
 	<select id="mMyCommentsGetAllList" resultMap="commentsBoardRM">
 		SELECT comments_no, id, contents_no, comments, comments_stars, comments_posted_time
		FROM(SELECT row_number() over(order by comments_no desc) as rnum, comments_no, id, contents_no, comments, comments_stars, comments_posted_time
		FROM comments where id = #{id})
		WHERE rnum BETWEEN #{pagingBean.startRowNumber} AND #{pagingBean.endRowNumber}
 	</select>
 	<!-- 컨텐츠별 Comments 게시물 리스트 조회 -->	
 	<select id="mCommentsGetListByContentsNo" resultMap="commentsBoardRM">
		SELECT S.COMMENTS_NO, M.ID, C.CONTENTS_NO, S.COMMENTS, S.COMMENTS_STARS, S.COMMENTS_POSTED_TIME 
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY COMMENTS_NO DESC) AS RNUM, COMMENTS_NO, ID, CONTENTS_NO, COMMENTS, COMMENTS_STARS, TO_CHAR(COMMENTS_POSTED_TIME,'yyyy-mm-dd') 
		AS COMMENTS_POSTED_TIME FROM COMMENTS WHERE CONTENTS_NO=#{contentsNo}) S, MEMBER M, CONTENTS C WHERE S.ID = M.ID AND S.CONTENTS_NO = C.CONTENTS_NO 
		AND RNUM BETWEEN #{pagingBean.startRowNumber} AND #{pagingBean.endRowNumber}
 	</select>
 	<!-- 내가 작성한 Comments 게시물 전체 수 조회 -->
 	<select id="mMyCommentsGetTotalPostCount" parameterType="string" resultType="int">
 		select count(*) from review where id=#{value}
 	</select>
 	
 	<!-- 해당 contents에 내가 쓴 comments 유무 확인 -->
 	<select id="mCheckWorteOrNot" parameterType="map" resultType="int">
 		SELECT COUNT(*) FROM comments WHERE id=#{userId} AND contents_no=#{contentsNo}
 	</select>
 	<!-- Comments 게시물 쓰기 -->
 	<insert id="mCommentsWrite" parameterType="commentsVO">
 		<selectKey keyProperty="commentsNo" resultType="int" order="BEFORE">
 			SELECT comments_seq.nextval FROM DUAL
 		</selectKey>
 		INSERT INTO comments(comments_no, id, contents_no, comments, comments_stars, comments_posted_time)
 		VALUES(#{commentsNo}, #{memberVO.id}, #{contentsVO.contentsNo}, #{comments}, #{commentsStars}, sysdate)
 	</insert>
 	<!-- Comments 게시글 삭제 -->
 	<delete id="mCommentsDelete" parameterType="int">
 		DELETE FROM comments WHERE comments_no=#{value}
 	</delete>
 	<!-- Connents 별 comments_stars 합계 -->
 	<select id="mSumCommentsStars" parameterType="string" resultType="int">
 		SELECT NVL(SUM(comments_stars), 0) FROM comments WHERE contents_no=#{contentsNo}
 	</select>
 	<!-- commentsNo에 대응하는 comments 게시물 조회 -->
 	<select id="mGetCommentsByCommentsNo" parameterType="int" resultMap="commentsBoardRM">
 		select comments_no, id, contents_no, comments, comments_stars, comments_posted_time
 		from comments where comments_no = #{value}
 	</select>
</mapper>










