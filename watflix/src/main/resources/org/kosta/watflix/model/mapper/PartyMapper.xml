<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.watflix.model.mapper.PartyMapper">
 	<sql id="selectParty">
	select *
	from party
	</sql>
 	<!-- 파티 게시글 작성 -->
 	<insert id="mPartyWrite" parameterType="partyVO">
 		<selectKey keyProperty="partyNo" resultType="int" order="BEFORE">
 			select party_seq.nextval from dual
 		</selectKey>
 		insert into party (Party_NO, ID, Party_Title, Membership_No,Party_HeadCount)
 					values(#{partyNo}, #{memberVO.id},#{partyTitle},#{membershipVO.membershipNo},#{partyHeadCount})
 	</insert>
 	
 	<!-- 총 파티게시글수 가져오기  -->
 	<select id="mPartyGetTotalCount" resultType="int">
 		select count(*) from party
 	</select>
 	
 	<resultMap type="partyVO" id="partyRM">
		<result property="memberVO.id" column="ID"/>
		<result property="membershipVO.membershipName" column="MEMBERSHIP_NAME"/>
		<result property="membershipVO.membershipNo" column="MEMBERSHIP_NO"/>
		<result property="membershipVO.concurrentUsers" column="CONCURRENT_USERS"/>
	</resultMap>
 	
 	<!-- 상세 파티 게시글 정보 가져오기 -->
 	<select id="mPartyGetDetail" resultMap="partyRM" parameterType="int">
 		select ms.membership_name, ms.MEMBERSHIP_NO , ms.CONCURRENT_USERS,
 		p.PARTY_NO, m.ID, p.PARTY_TITLE, p.PARTY_HEADCOUNT, p.PARTY_APPLYCOUNT,
		to_char(p.PARTY_POSTED_TIME,'yyyy-mm-dd') as PARTY_POSTED_TIME, p.PARTY_STATUS 
		From PARTY p, member m, MEMBERSHIP ms
		WHERE p.id=m.id and p.membership_no = ms.membership_no and party_no=#{value}
 	</select>
 	
 	<!-- 게시글 리스트 가져오기 -->
 	<select id="mPartyGetAllList" resultMap="partyRM" parameterType="pagingBean">
 		SELECT p.PARTY_NO, p.id, p.PARTY_TITLE, ms.membership_name, p.PARTY_STATUS,
 		p.PARTY_HEADCOUNT,p.PARTY_APPLYCOUNT,to_char(p.PARTY_POSTED_TIME,'yyyy-mm-dd') as PARTY_POSTED_TIME
 		
 		From(SELECT row_number() over (order by PARTY_NO desc) as rnum,PARTY_NO,ID,PARTY_TITLE,membership_no,PARTY_STATUS,
 		PARTY_HEADCOUNT,PARTY_APPLYCOUNT,PARTY_POSTED_TIME FROM PARTY) p ,
 		MEMBERSHIP ms
 		
 		WHERE rnum BETWEEN #{startRowNumber} AND #{endRowNumber} and p.membership_no = ms.membership_no
 	</select>
 	
 	<!-- 파티게시판 게시글 수정
 		 이용권종류, 모집인원 변경 -->
 	<update id="mPartyUpdate" parameterType="partyVO">
 		update PARTY set 
 		MEMBERSHIP_NO = #{membershipVO.membershipNo},
 		PARTY_HEADCOUNT=#{partyHeadCount} 
 		WHERE PARTY_NO=#{partyNo}
 	</update>
 	<!-- 게시글 삭제 -->
 	<delete id="mPartyDelete" parameterType="int">
 		delete from party where PARTY_NO=#{value}
 	</delete>
 	
 	<update id="mPartyApplyCountPlus">
 		update PARTY set PARTY_APPLYCOUNT = PARTY_APPLYCOUNT+1 
 		WHERE PARTY_NO = #{value}
 	</update>
 	<!-- 파티게시글 지원하기 -->
 	<insert id="mPartyApply" parameterType="applyVO">
 		insert into APPLY(ID,PARTY_NO)
 		values (#{memberVO.id},#{partyVO.partyNo})
 	</insert>
 	<!-- 파티게시글 상태 모집 종료처리 -->
 	<update id="mPartyEnd" parameterType="partyVO">
 		update PARTY SET PARTY_STATUS = '모집완료'
 		WHERE PARTY_NO = #{partyNo}
 	</update>
 	
 	<!-- 멤버십 정보 다 받아오기 -->
 	<sql id="selectMembership">
 	select MEMBERSHIP_NO , MEMBERSHIP_NAME , CONCURRENT_USERS FROM MEMBERSHIP WHERE MEMBERSHIP_NO = #{value}
 	</sql>
 	
 	<select id="mPartyGetMembershipDetail" parameterType="int" resultType="membershipVO">
 		<include refid="selectMembership"></include>
 	</select>
 	
</mapper>










